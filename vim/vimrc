"VUNDLE SETUP
"-------------------------------------------------------------------------------
set rtp+=~/.vim/bundle/Vundle.vim "Set Runtime Directory




call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'wakatime/vim-wakatime'
Plugin 'airblade/vim-gitgutter'
Plugin 'tomtom/tcomment_vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'mattn/emmet-vim'
Plugin 'vim-scripts/OmniCppComplete'
Plugin 'kien/ctrlp.vim'
call vundle#end()





"COMPATIBILITY & ENCODING
"-------------------------------------------------------------------------------
set nocompatible       "Use Vim features, not Vi
set encoding=utf-8     "Set UTF-8 Encoding
set termencoding=utf-8 "Set UTF-8 Encoding





"SYNTAX HIGHLIGHTING
"-------------------------------------------------------------------------------
syntax enable           "Switches on syntax highlighting
filetype plugin on      "Detect filetype
colorscheme solarized   "Better syntax highlight
set background=dark     "Dark background for better reading
set term=xterm-256color "256 colours
set t_Co=256            "256 colours
set showmatch           "Show matching parens, brackets, etc.
set shiftround          "Round indent to nearest multiple of 2
set guifont=Inconsolata\ for\ Powerline:h20





"TEXT
"-------------------------------------------------------------------------------
filetype plugin indent on "When a file is edited its indent file is loaded
let html_no_rendering=1   "Remove underline from HTML files
set expandtab             "Make the tab key insert spaces instead of tabs
set tabstop=2             "Set the width of an actual tab
set shiftwidth=2          "Size of an indent
set softtabstop=2         "Make the tab key to simulate tab stops at this width
set showtabline=2         "Show tabline
set nowrap                "No line-wrapping





"DECORATIONS
"-------------------------------------------------------------------------------
set number          "Display line numbers
set numberwidth=5   "Change the width of the gutter column used for numbering
set ruler           "Show current line and column position in file
set textwidth=80    "New line after 80 characters
set colorcolumn=+1  "Colour the 81st column
set cursorline      "Highlight the current line in every window
set title           "Show file title in terminal tab
set shortmess=atI   "File messages and options
set showcmd         "Incomplete Commands
set laststatus=2    "Make the status line visible in with only one window
set modeline        "Allow modelines
set guioptions-=r   "Hide right scrollbar from GUI
set guioptions-=e   "Make Vim GUI tab menu to look like Console tab menu
set list            "Show invisibles
set listchars=tab:»-,trail:· "Make the invisibles looks better





"BUFFER
"-------------------------------------------------------------------------------
set wildmenu          "Show file options above the command line
set splitright        "Open splits to the right
set splitbelow        "Open splits to below
set fillchars=vert:\  "Change vertical split characters
set wildignore=.swp,.swo,.netrwhist,.svn,.git,.gitkeep,.DS_Store,.sass-cache,node_modules,bower_components
let g:netrw_list_hide='.swp,.swo,.netrwhist,.svn,.git,.gitkeep,.DS_Store,.sass-cache,node_modules,bower_components'
let g:ctrlp_custom_ignore = '\v[\/]\.(git|svn|node_modules|bower_components)$'




"SEARCH
"-------------------------------------------------------------------------------
set nohlsearch "Don't keep results highlighted after searching
set incsearch  "Just highlight as we type
set ignorecase "Ignore case when searching
set smartcase  "Except if we input a capital letter





"INTERACTIONS
"-------------------------------------------------------------------------------
set scrolloff=3     "Start scrolling before the cursor reaches an edge
set sidescrolloff=5 "Start scrolling before the cursor reaches an edge
set sidescroll=1    "Scroll sideways a character at a time
set backspace=indent,eol,start "Allow motions and back-spacing over line-endings
set whichwrap=h,l,b,<,>,~,[,]  "Allow motions and back-spacing over line-endings
set statusline=%f\ %=Line\ %l/%L\ Col\ %c\ (%p%%)
autocmd VimResized * exe "normal! \<c-w>=" "Resize splits





"KEY MAPPINGS
"-------------------------------------------------------------------------------
inoremap jj <esc>     "jj to throw you into normal mode from insert mode
noremap jk <esc>      "jK to throw you into normal mode from insert mode
map  <Leader>_b <c-/> "Toggle comments
imap <Leader>_b <c-/> "Toggle comments





"Front-end Beautify
autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>
autocmd FileType html noremap <buffer> <c-f> :call HtmlBeautify()<cr>
autocmd FileType css noremap <buffer> <c-f> :call CSSBeautify()<cr>





"PLUGINS SETTINGS
"-------------------------------------------------------------------------------
"CSS Autocomplete
" autocmd FileType css set omnifunc=csscomplete#CompleteCSS

"Emmet
" let g:user_emmet_install_global = 0       "Turn Emmet off globally
" autocmd FileType html,css EmmetInstall    "Emmet just for HTML & CSS
" let g:user_emmet_expandabbr_key = '<tab>' "Change Emmet trigger to Tab
